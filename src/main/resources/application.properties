slack.callback.url=${SLACK_CALLBACK_URL}
discord.callback.url=${DISCORD_CALLBACK_URL}
discord.callback.token=${DISCORD_CALLBACK_TOKEN}
spring.main.allow-circular-references=true

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://${MYSQL_HOST:localhost}:3306/localnews
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.kafka.bootstrap-servers=${KAFKA_HOST}
spring.kafka.producer.bootstrap-servers=${KAFKA_HOST}
spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST}

#spring.kafka.producer.bootstrap-servers=${KAFKA_HOST:localhost}:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

#spring.kafka.consumer.bootstrap-servers=${KAFKA_HOST:localhost}:9092
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

localnews.kafka.topic.name=${KAFKA_TOPIC:local-news}
localnews.kafka.enabled=${KAFKA_ENABLED:false}

#spring.jpa.show-sql: true
